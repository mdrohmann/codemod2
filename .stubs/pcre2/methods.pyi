from typing import Iterable
from .match import Match
from .pattern import Pattern

def compile(pattern: str, options: int = 0, jit: bool = False) -> Pattern: ...
def findall(pattern: str, subject: str, offset: int = 0) -> list[str] | list[tuple[str, ...]]: ...
def match(pattern: str, subject: str, offset: int = 0, options: int = 0) -> Match: ...
def scan(pattern: str, subject: str, offset: int = 0) -> Iterable[Match]: ...
def split(pattern: str, subject: str, maxsplit: int = 0, offset: int = 0) -> list[str]: ...
def substitute(pattern: str, replacement: str, subject: str, offset: int = 0, options: int = 0, low_memory: bool = False) -> str: ...
